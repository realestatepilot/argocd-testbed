apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vault-transit-setup.fullname" . }}
  labels:
    {{- include "vault-transit-setup.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vault-transit-setup.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vault-transit-setup.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vault-transit-setup.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-restore-keys
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: debian
          command: ["/bin/sh", "-c"]
          args:
            - |
              apt-get update; apt-get install -y curl
              sleep 20
              echo "restore transit keys"
              
              # backup
              curl --header "X-Vault-Token: mySecret" --request POST --data '{ "exportable": true, "allow_plaintext_backup": true }' http://in-cluster-vault:8200/v1/transit/keys/argocd
              curl --header "X-Vault-Token: mySecret" --request POST --data '{ "allow_plaintext_backup": true }' http://in-cluster-vault:8200/v1/transit/keys/argocd
              
              # curl --header "X-Vault-Token: mySecret"  http://in-cluster-vault:8200/v1/transit/backup/argocd
              sleep infinity
          env:
            {{- toYaml .Values.env | nindent 12 }}

        - name: {{ .Chart.Name }}-setup
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: 
            - |
              vault secrets enable transit
              sleep infinity
          env:
            {{- toYaml .Values.env | nindent 12 }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts: 
            - name: tools
              mountPath: /tools
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        - name: tools
          emptyDir: {}
